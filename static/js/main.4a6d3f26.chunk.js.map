{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Array","Math","ceil","fill","map","_","i","numberOfItems","numberOfItemsOnLastPage","isFirstPage","isLastPage","length","className","cn","disabled","href","onClick","prevState","number","active","item","App","useState","setPerPage","setCurrentPage","currentItemsStart","pageInfo","id","value","onChange","event","target","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA8B,SAAC,GAQtC,IANFC,EAMC,EANDA,MACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,aAIIC,EAAgBC,MAAMC,KAAKC,KAAKP,EAAQC,IAC3CO,KAAK,GACLC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,EAAI,KAEfC,EAAgBP,MAAMJ,GACzBO,KAAK,GACLC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,GAAMT,EAAc,GAAKD,EAAW,KAE/CY,EAA0BR,MAC9BL,GAASM,KAAKC,KAAKP,EAAQC,GAAW,GAAKA,GAE1CO,KAAK,GACLC,KAAI,SAACC,EAAGC,GAAJ,OAAUA,GAAMT,EAAc,GAAKD,EAAW,KAE/Ca,EAA8B,IAAhBZ,EACda,EAAab,IAAgBE,EAAcY,OAEjD,OACE,qCACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YACZ,CAAEC,SAAUL,IAFhB,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAeN,EACfO,QAAS,kBAAMlB,GACb,SAACmB,GAAD,OAAeA,EAAY,MAN/B,oBAYDlB,EAAcK,KAAI,SAAAc,GAAM,OACvB,oBAAIN,UAAWC,IAAG,YAAa,CAAEM,OAAQtB,IAAgBqB,IAAzD,SACE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMlB,EAAaoB,IAJ9B,SAMGA,SAIP,oBACEN,UAAWC,IAAG,YACZ,CAAEC,SAAUJ,IAFhB,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,kBAAMlB,GACb,SAACmB,GAAD,OAAeA,EAAY,MAN/B,uBAcJ,6BACIpB,IAAgBI,KAAKC,KAAKP,EAAQC,GAChCW,EAAcH,KAAI,SAAAgB,GAAI,OACtB,oBAAI,UAAQ,OAAZ,wBAAuCA,IAAfA,MAGxBZ,EAAwBJ,KAAI,SAAAgB,GAAI,OAChC,oBAAI,UAAQ,OAAZ,wBAAuCA,IAAfA,YClFvBC,EAAgB,WAE3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAO1B,EAAP,KAAgB2B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOzB,EAAP,KAAoB2B,EAApB,KASMhB,EAXQ,IAYZP,KAAKC,KAZO,GAYMN,GAAW,GAAKA,EAE9B6B,GAAsB5B,EAAc,GAAKD,EAAW,EASpD8B,EAAQ,eAAW7B,EAAX,mBAAiC4B,EAAjC,cAPR5B,IAAgBI,KAAKC,KAhBb,GAgB0BN,IAC3BC,EAAc,GAAKD,EAAWY,EAGlCX,EAAcD,EAGT,eAvBA,GAuBA,KAEd,OAEE,sBAAKgB,UAAU,YAAf,UAEE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACGc,IAGH,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRe,GAAG,kBACHf,UAAU,eACVgB,MAAOhC,EACPiC,SAtCkB,SAC1BC,GAEAP,GAAYO,EAAMC,OAAOH,OACzBJ,EAAe,IA6BT,UAOE,wBAAQI,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBpB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEjB,MAxDQ,GAyDRC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACmC,GACbT,EAAeS,UCpEzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4a6d3f26.chunk.js","sourcesContent":["import cn from 'classnames';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (value: React.SetStateAction<number>) => void,\n}\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n\n) => {\n  const numberOfPages = Array(Math.ceil(total / perPage))\n    .fill(0)\n    .map((_, i) => i + 1);\n\n  const numberOfItems = Array(perPage)\n    .fill(0)\n    .map((_, i) => i + ((currentPage - 1) * perPage) + 1);\n\n  const numberOfItemsOnLastPage = Array(\n    total - (Math.ceil(total / perPage) - 1) * perPage,\n  )\n    .fill(0)\n    .map((_, i) => i + ((currentPage - 1) * perPage) + 1);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === numberOfPages.length;\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li\n          className={cn('page-item',\n            { disabled: isFirstPage })}\n        >\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled={isFirstPage}\n            onClick={() => onPageChange(\n              (prevState) => prevState - 1,\n            )}\n          >\n            «\n          </a>\n        </li>\n        {numberOfPages.map(number => (\n          <li className={cn('page-item', { active: currentPage === number })}>\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${number}`}\n              onClick={() => onPageChange(number)}\n            >\n              {number}\n            </a>\n          </li>\n        ))}\n        <li\n          className={cn('page-item',\n            { disabled: isLastPage })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled={isLastPage}\n            onClick={() => onPageChange(\n              (prevState) => prevState + 1,\n            )}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n\n      <ul>\n        {(currentPage !== Math.ceil(total / perPage))\n          ? numberOfItems.map(item => (\n            <li data-cy=\"item\" key={item}>{`Item ${item}`}</li>\n          ))\n\n          : numberOfItemsOnLastPage.map(item => (\n            <li data-cy=\"item\" key={item}>{`Item ${item}`}</li>\n          ))}\n      </ul>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n// const items = getNumbers(1, 42)\n//   .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePerPageChange = (\n    event:React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const numberOfItemsOnLastPage = total - (\n    Math.ceil(total / perPage) - 1) * perPage;\n\n  const currentItemsStart = ((currentPage - 1) * perPage) + 1;\n  const currentItemsEnd = () => {\n    if (currentPage === Math.ceil(total / perPage)) {\n      return ((currentPage - 1) * perPage) + numberOfItemsOnLastPage;\n    }\n\n    return currentPage * perPage;\n  };\n\n  const pageInfo = `Page ${currentPage} (items ${currentItemsStart} - ${currentItemsEnd()} of ${total})`;\n\n  return (\n\n    <div className=\"container\">\n\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {pageInfo}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total} // total number of items to paginate\n        perPage={perPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}