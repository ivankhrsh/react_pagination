{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","numberOfPages","Math","ceil","pages","isFirstPage","isLastPage","className","cn","disabled","href","onClick","prevState","map","number","isPageSelected","active","items","App","length","useState","setPerPage","setCurrentPage","numberOfItemsOnLastPage","currentItemsStart","currentItemsEnd","visibleItems","slice","pageInfo","id","value","onChange","event","target","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAQtC,IANFC,EAMC,EANDA,MACAC,EAKC,EALDA,QACAC,EAIC,EAJDA,YACAC,EAGC,EAHDA,aAIIC,EAAgBC,KAAKC,KAAKN,EAAQC,GAClCM,EAAQd,EAAW,EAAGW,GAEtBI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAsBnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAG,YACZ,CAAEC,SAAUJ,IAFhB,SAIE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAAS,WA9BXN,GAIJL,GACE,SAACY,GAAD,OAAeA,EAAY,MAoBzB,oBAUDR,EAAMS,KAAI,SAAAC,GACT,IAAMC,EAAiBhB,IAAgBe,EAEvC,OACE,oBAAIP,UAAWC,IACb,YACA,CAAEQ,OAAQD,IAFZ,SAKE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAI,WAAMI,GACVH,QAAS,kBAAMX,EAAac,IAJ9B,SAMGA,SAKT,oBACEP,UAAWC,IACT,YACA,CAAEC,SAAUH,IAHhB,SAME,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QAAS,WAxDXL,GAIJN,GACE,SAACY,GAAD,OAAeA,EAAY,MA8CzB,wBChFFK,EAAQ3B,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEPwB,EAAgB,WAE3B,IAAMrB,EAAQoB,EAAME,OACpB,EAA8BC,mBAAS,GAAvC,mBAAOtB,EAAP,KAAgBuB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOrB,EAAP,KAAoBuB,EAApB,KASMC,EAA0B1B,GAC9BK,KAAKC,KAAKN,EAAQC,GAAW,GAAKA,EAE9B0B,GAAsBzB,EAAc,GAAKD,EACzC2B,EAAkB,WACtB,OAAI1B,IAAgBG,KAAKC,KAAKN,EAAQC,IAC3BC,EAAc,GAAKD,EAAWyB,EAGlCxB,EAAcD,GAGjB4B,EAAeT,EAAMU,MAAMH,EAAmBC,KAE9CG,EAAQ,eAAW7B,EAAX,mBACZyB,EAAoB,EADR,cACeC,IADf,eACuC5B,EADvC,KAGd,OAEE,sBAAKU,UAAU,YAAf,UAEE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,SACGqB,IAGH,sBAAKrB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRsB,GAAG,kBACHtB,UAAU,eACVuB,MAAOhC,EACPiC,SAzCkB,SAC1BC,GAEAX,GAAYW,EAAMC,OAAOH,OACzBR,EAAe,IAgCT,UAOE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEV,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aAAc,SAACmC,GACbb,EAAea,MAInB,6BAEIT,EAAab,KAAI,SAAAuB,GAAI,OACnB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCjFnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c7c49f99.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (value: React.SetStateAction<number>) => void,\n}\n\nexport const Pagination: React.FC<Props> = (\n  {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  },\n\n) => {\n  const numberOfPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, numberOfPages);\n\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === numberOfPages;\n\n  const handleMoveToPreviousPage = () => {\n    if (isFirstPage) {\n      return;\n    }\n\n    onPageChange(\n      (prevState) => prevState - 1,\n    );\n  };\n\n  const handleMoveToNextPage = () => {\n    if (isLastPage) {\n      return;\n    }\n\n    onPageChange(\n      (prevState) => prevState + 1,\n    );\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn('page-item',\n          { disabled: isFirstPage })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => handleMoveToPreviousPage()}\n        >\n          «\n        </a>\n      </li>\n      {pages.map(number => {\n        const isPageSelected = currentPage === number;\n\n        return (\n          <li className={cn(\n            'page-item',\n            { active: isPageSelected },\n          )}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${number}`}\n              onClick={() => onPageChange(number)}\n            >\n              {number}\n            </a>\n          </li>\n        );\n      })}\n      <li\n        className={cn(\n          'page-item',\n          { disabled: isLastPage },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={() => handleMoveToNextPage()}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const total = items.length;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const handlePerPageChange = (\n    event:React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const numberOfItemsOnLastPage = total - (\n    Math.ceil(total / perPage) - 1) * perPage;\n\n  const currentItemsStart = ((currentPage - 1) * perPage);\n  const currentItemsEnd = () => {\n    if (currentPage === Math.ceil(total / perPage)) {\n      return ((currentPage - 1) * perPage) + numberOfItemsOnLastPage;\n    }\n\n    return currentPage * perPage;\n  };\n\n  const visibleItems = items.slice(currentItemsStart, currentItemsEnd());\n\n  const pageInfo = `Page ${currentPage} (items ${\n    currentItemsStart + 1} - ${currentItemsEnd()} of ${total})`;\n\n  return (\n\n    <div className=\"container\">\n\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {pageInfo}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handlePerPageChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total} // total number of items to paginate\n        perPage={perPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={(page) => {\n          setCurrentPage(page);\n        }}\n      />\n\n      <ul>\n        {\n          visibleItems.map(item => (\n            <li\n              data-cy=\"item\"\n              key={item}\n            >\n              {item}\n            </li>\n          ))\n        }\n\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}